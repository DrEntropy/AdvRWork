mean(weight_sim > 1750)
log_men <- 5.13
sd_men <- 0.17
log_women <- 4.96
sd_women <- .20
random_group <- function(size=10)
{
men <- rbinom(size,1,0.5)
weights <- ifelse(men, rlnorm(size,log_men,sd_men),rlnorm(size,log_women,sd_women))
sum(weights)
}
weight_sim <- replicate(100000, random_group(10))
mean(weight_sim > 1750)
dbinom(3,10,.4)
dbinom(3,10,.4)
simulate_shots <- function(size = 10){
rbinom(1,size,.4)
}
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots()
simulate_shots <- function(size = 10){
rbinom(1,size,.4)
}
mean(replicate(10000, simulate_shots())==3)
sim_n_uniform <- function(n=20){
sum(runif(n,0,1))
}
simulated_sums <- replicate(1000,sim_n_uniform)
sim_n_uniform <- function(n=20){
sum(runif(n,0,1))
}
simulated_sums <- replicate(1000,sim_n_uniform())
sim_n_uniform <- function(n=20){
sum(runif(n,0,1))
}
simulated_sums <- replicate(1000,sim_n_uniform())
hist(simulated_sums)
sim_n_uniform <- function(n=20){
sum(runif(n,0,1))
}
simulated_sums <- replicate(1000,sim_n_uniform())
hist(simulated_sums)
x <- 0:150/10
plot(x,dnorm(x,mean=0.5*20, sd = 20/sqrt(12) ))
sim_n_uniform <- function(n=20){
sum(runif(n,0,1))
}
simulated_sums <- replicate(1000,sim_n_uniform())
hist(simulated_sums)
x <- 0:150/10
plot(x,dnorm(x,mean=0.5*20, sd = sqrt(20)/sqrt(12) ), type='l', )
sim_n_uniform <- function(n=20){
sum(runif(n,0,1))
}
simulated_sums <- replicate(1000,sim_n_uniform())
hist(simulated_sums)
x <- 0:150/10
line(x,dnorm(x,mean=0.5*20, sd = sqrt(20)/sqrt(12) ), type='l', )
? line
sim_n_uniform <- function(n=20){
sum(runif(n,0,1))
}
simulated_sums <- replicate(1000,sim_n_uniform())
hist(simulated_sums)
x <- 0:150/10
lines(x,dnorm(x,mean=0.5*20, sd = sqrt(20)/sqrt(12) )  )
sim_n_uniform <- function(n=20){
sum(runif(n,0,1))
}
simulated_sums <- replicate(1000,sim_n_uniform())
hist(simulated_sums)
x <- 0:150/10
lines(x,20*dnorm(x,mean=0.5*20, sd = sqrt(20)/sqrt(12) )  )
? hist
sim_n_uniform <- function(n=20){
sum(runif(n,0,1))
}
simulated_sums <- replicate(1000,sim_n_uniform())
hist(simulated_sums, freq=FALSE)
x <- 0:150/10
lines(x,dnorm(x,mean=0.5*20, sd = sqrt(20)/sqrt(12) )  )
sim_n_uniform <- function(n=20){
sum(runif(n,0,1))
}
simulated_sums <- replicate(1000,sim_n_uniform())
hist(simulated_sums, freq=FALSE)
x <- 0:150/10
lines(x,dnorm(x,mean=0.5*20, sd = sqrt(20)/sqrt(12) )  )
sim_n_uniform <- function(n=20){
sum(runif(n,0,1))
}
simulated_sums <- replicate(1000,sim_n_uniform())
hist(simulated_sums, freq=FALSE)
x <- 0:150/10
lines(x,dnorm(x,mean=0.5*20, sd = sqrt(20)/sqrt(12) )  )
sim_n_uniform <- function(n=20){
sum(runif(n,0,1))
}
simulated_sums <- replicate(1000,sim_n_uniform())
hist(simulated_sums, freq=FALSE)
x <- 0:150/10
lines(x,dnorm(x,mean=0.5*20, sd = sqrt(20)/sqrt(12) )  )
savings_mean <- 5
savings_err <- 4
market_mean <- 40000
market_err <- 10000
simulated_market <- function(){
savings <- rnorm(1,savings_mean,savings_err)
market <- rnorm(1,market_mean,market_sd)
savings*market
}
data <- replicate(10000, simulated_market())
savings_mean <- 5
savings_err <- 4
market_mean <- 40000
market_err <- 10000
simulated_market <- function(){
savings <- rnorm(1,savings_mean,savings_err)
market <- rnorm(1,market_mean,market_err)
savings*market
}
data <- replicate(10000, simulated_market())
hist(data)
mean(data)
savings_mean <- 5
savings_err <- 4
market_mean <- 40000
market_err <- 10000
simulated_market <- function(){
savings <- rnorm(1,savings_mean,savings_err)
market <- rnorm(1,market_mean,market_err)
savings*market
}
data <- replicate(10000, simulated_market())
hist(data/1000)
mean(data)
true_effect <- 0.10
sd_err <- 0.17
simulated_exp <- rnorm(1000, true_effect, sd_err)
c(mean(simulated_exp),sd(simulated_exp))
lower= simulated_exp-2*sd_err
upper = simulated_exp + 2*sd_err
mean(lower < true_effect & upper > true_effect)
mean(simulated_exp > .35)
dbinom(3,10,.4)
significant <- simulated_exp(lower>0)
significant <- simulated_exp[lower>0]
significant <- simulated_exp[lower>0]
c(mean(significant), sd(significant))
significant <- simulated_exp[lower>0]
c(mean(significant), sd(significant))
cost_increase <- 600
cost_err <- 400
effect <- 3.0
effect_err <- 1.0
sim_cost <- rnorm(1000,cost, cost_err)
cost_increase <- 600
cost_err <- 400
effect <- 3.0
effect_err <- 1.0
sim_cost <- rnorm(1000,cost_increase, cost_err)
sim_effect <- rnorm(1000,effect, effect_err)
plot(sim_cost,sim_effect)
cost_effect_ratio = sim_cost/sim_effect
quantile(c(0.025,0.975), cost_effect_ratio)
cost_effect_ratio = sim_cost/sim_effect
quantiles(c(0.025,0.975), cost_effect_ratio)
cost_effect_ratio
?qunatile
?quantile
cost_effect_ratio = sim_cost/sim_effect
quantiles( cost_effect_ratio , probs = c(0.025,.975))
cost_effect_ratio = sim_cost/sim_effect
quantile( cost_effect_ratio , probs = c(0.025,.975))
cost_effect_ratio = sim_cost/sim_effect
quantile( cost_effect_ratio , probs = c(0.025,0.25,0.75,.975))
sim_effect <- rnorm(1000,effect, 2)
cost_effect_ratio = sim_cost/sim_effect
quantile( cost_effect_ratio , probs = c(0.025,0.25,0.75,.975))
?switch
assign <- function(n,p, method){
switch(method,
independant = binomial(n,1,p)
)
assign <- function(n,p, method){
switch(method,
independant = binomial(n,1,p)
)
}
assign(100,.5,independant)
assign(100,.5,"independant")
assign <- function(n,p, method = "independant"){
switch(method,
independant = rbinom(n,1,p)
)
}
assign(100,.5,independant)
assign(100,.5,"independant")
assign(100,.5)
rep(1,100*.3)
rep(1,100*.32)
rep(1,100*.31)
length(c(1,2,3))
assign <- function(n,p, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
c(ones,zeros)
}
)
}
assign <- function(n,p, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
c(ones,zeros)
}
)
}
assign(100,.24,"complete")
sample()
? sample
assign <- function(n,p, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
sample(c(ones,zeros),n)
}
)
}
assign(100,.24,"complete")
assign <- function(n,p, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
sample(c(ones,zeros),n)
}
)
}
assign(100,.24,"complete")
assign <- function(n,p, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
sample(c(ones,zeros),n)
}
)
}
assign(100,.24,"complete")
assign <- function(n,p, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
sample(c(ones,zeros),n)
}
)
}
assign(100,.24,"complete")
assign <- function(n,p=0.5, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
sample(c(ones,zeros),n)
}
matched = {
assign <- function(n,p=0.5, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
sample(c(ones,zeros),n)
},
matched = {
if(p!=0.5) stop("matched only works with p=0.5")
}
)
}
assign(100,.24,"complete")
assign <- function(n,p=0.5, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
sample(c(ones,zeros),n)
},
matched = {
if(p!=0.5) stop("matched only works with p=0.5")
}
)
}
assign(100,.24,"matched")
assign <- function(n,p=0.5, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
sample(c(ones,zeros),n)
},
matched = {
if(p!=0.5) stop("matched only works with p=0.5")
}
)
}
assign(100,method="matched")
23%%2
22%%2
pairs <- rbinom(100,1,0.5)
pairs
ifelse(pairs,c(1,0),c(0,1))
assign <- function(n,p=0.5, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
sample(c(ones,zeros),n)
},
matched = {
if(p!=0.5 || n%%2 != 0) stop("matched only works with p=0.5 and even n")
pairs <- rbinom(n/2,1,0.5)
ifelse(pairs,c(1,0),c(0,1))
}
)
}
assign(100,method="matched")
assign <- function(n,p=0.5, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
sample(c(ones,zeros),n)
},
matched = {
if(p!=0.5 || n%%2 != 0) stop("matched only works with p=0.5 and even n")
pairs <- rbinom(n/2,1,0.5)
res<- c()
for(pair in pairs){
if(pair)
res <- c(res,c(0,1))
else
res <- c(res,c(1,0))
}
}
)
}
assign(100,method="matched")
assign <- function(n,p=0.5, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
sample(c(ones,zeros),n)
},
matched = {
if(p!=0.5 || n%%2 != 0) stop("matched only works with p=0.5 and even n")
pairs <- rbinom(n/2,1,0.5)
res<- c()
for(pair in pairs){
if(pair)
res <- c(res,c(0,1))
else
res <- c(res,c(1,0))
}
res
}
)
}
assign(100,method="matched")
assign <- function(n,p=0.5, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
sample(c(ones,zeros),n)
},
matched = {
if(p!=0.5 || n%%2 != 0) stop("matched only works with p=0.5 and even n")
pairs <- rbinom(n/2,1,0.5)
res<- c()
for(pair in pairs){
if(pair)
res <- c(res,c(0,1))
else
res <- c(res,c(1,0))
}
res
}
)
}
test <- assign(100,method="matched")
test
length(test)
? switch
assign <- function(n,p=0.5, method = "independant"){
switch(method,
independant = rbinom(n,1,p),
complete = {
ones <- rep(1,n*p)
zeros <- rep(0,n-length(ones))
sample(c(ones,zeros),n)
},
matched = {
if(p!=0.5 || n%%2 != 0) stop("matched only works with p=0.5 and even n")
pairs <- rbinom(n/2,1,0.5)
res<- c()
for(pair in pairs){
if(pair)
res <- c(res,c(0,1))
else
res <- c(res,c(1,0))
}
res
},
stop("Method must be one of independant, complete, or matched")
)
}
test <- assign(100,method="matched")
test <- assign(100,method="matched")
test <- assign(100,method="matcdf"_
test <- assign(100,method="matcdf")
? file.remove
?stop
paste0
paste0("\")
))FD
)
d25435
''
;;
''
""
"
paste0("f","a")
"\""
paste0("\"","filename","\"")
file.remove.safe <- function(filename){
if(!file.exists(filename))
stop(paste0("<",filename,"> doesn't exist"), call. = FALSE)
file.remove(filename)
}
ls
!ls
ls()
setwd("~/devel/dataSci/AdvRWork")
file.remove.safe("fds")
? message
?rlang::abort
library(rlang)
catch_cnd(stop("An error"))
c(catch_cnd(stop("An error")), catch_cnd(abort("An error"))
c(catch_cnd(stop("An error")), catch_cnd(abort("An error")))
cnd_stop <- catch_cnd(stop("An error")
cnd_abort <- catch_cnd(abort("An error")
cnd_stop <- catch_cnd(stop("An error"))
cnd_abort <- catch_cnd(abort("An error"))
show_condition <- function(code) {
tryCatch(
error = function(cnd) "error",
warning = function(cnd) "warning",
message = function(cnd) "message",
{
code
NULL
}
)
}
# prediction -> An error with message "error"
show_condition(stop("!"))
show_condition(stop("!"))
show_condition(10)
show_condition(warning("?!"))
show_condition({
10
message("?")
warning("?!")
})
